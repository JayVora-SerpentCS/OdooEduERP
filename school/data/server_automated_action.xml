
<openerp>
    <data noupdate="1">
        
        <!-- Action Schedular for Payment -->
        <record id="action_set_payment" model="ir.actions.server">
            <field name="name">Set Payment</field>
            <field name="model_id" ref="model_student_student"/>
            <field name="condition">True</field>
            <field name="type">ir.actions.server</field>
            <field name="state">code</field>
            <field name="code">
curr_date = datetime.datetime.now()
student_ids = self.search(cr,uid,[('state','=','done')],context=context)
student_obj = self.browse(cr,uid,student_ids,context=context)
remindar_obj = self.pool.get('student.reminder')
for student_rec in student_obj:
    account_obj = self.pool.get('account.invoice')
    invoice_ids = account_obj.search(cr,uid,[('state','!=','paid'),('partner_id','=',student_rec.user_id.partner_id.id)],context=context)
    remindar_ids = remindar_obj.search(cr,uid,[('action_payment','=',True),('stu_id','=',student_rec.id)],context=context)
    old = remindar_obj.browse(cr,uid, remindar_ids,context=context)
    if old:
        pass
    else:
        for acc_rec in account_obj.browse(cr, uid, invoice_ids, context=context):
            vals = {'stu_id': student_rec.id,  'date' : curr_date + datetime.timedelta(days=+1),  'name' : 'Payment Required' + str(acc_rec.name),  'description' : 'Payment for fees is required which is create for' + str(acc_rec.origin) + '. Kindly do process.' , 'action_payment' : True}
            remindar_obj.create(cr, uid, vals, context=context)
            </field>
        </record>
        
        <record id="rule_set_library_book_reminders" model="base.action.rule">
            <field name="name">Set Auto Students Reminders.</field>
            <field name="model_id" ref="model_student_student"/>
            <field name="sequence">1</field>
            <field name="kind">on_time</field>
            <field name="trg_date_id" ref="field_student_student_create_date"/>
            <field name="trg_date_range">-1</field>
            <field name="trg_date_range_type">day</field>
            <field name="server_action_ids" eval="[(6,0,[ref('school.action_set_payment')])]"/>
        </record>
        
        <!-- Reminder scheduler -->
        <record id="reminder_scheduler" model="ir.cron">
            <field name="name">Reminder Analysis</field>
            <field eval="True" name="active"/>
            <field name="interval_number">1</field>
            <field name="interval_type">days</field>
            <field name="numbercall">-1</field>
            <field name="doall" eval="False"/>
            <field eval="'student.reminder'" name="model"/>
            <field eval="'reminder_gone'" name="function"/>
            <field eval="'()'" name="args"/>
       </record>
       
       <!-- Student scheduler -->
        <record id="student_scheduler" model="ir.cron">
            <field name="name">Submit Student Admission Analysis</field>
            <field eval="True" name="active"/>
            <field name="interval_number">2</field>
            <field name="interval_type">hours</field>
            <field name="numbercall">-1</field>
            <field name="doall" eval="False"/>
            <field eval="'student.student'" name="model"/>
            <field eval="'scheduler_submit_student'" name="function"/>
            <field eval="'()'" name="args"/>
       </record>
       
       <!-- Student admission withdrawn after 4 weeks -->
        <record id="student_admission_withdrawn" model="ir.cron">
            <field name="name">Student Admission Withdrawn</field>
            <field eval="True" name="active"/>
            <field name="interval_number">1</field>
            <field name="interval_type">days</field>
            <field name="numbercall">-1</field>
            <field name="doall" eval="False"/>
            <field eval="'student.student'" name="model"/>
            <field eval="'scheduler_admission_withdrawn'" name="function"/>
            <field eval="'()'" name="args"/>
       </record>
       
       <!-- Student admission registration no. -->
        <record id="student_admission_registration" model="ir.cron">
            <field name="name">Student Admission Registration</field>
            <field eval="True" name="active"/>
            <field name="interval_number">5</field>
            <field name="interval_type">hours</field>
            <field name="numbercall">-1</field>
            <field name="doall" eval="False"/>
            <field eval="'student.student'" name="model"/>
            <field eval="'scheduler_admission_registration'" name="function"/>
            <field eval="'()'" name="args"/>
       </record>
    </data>
</openerp>